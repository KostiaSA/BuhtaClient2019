{
    "description": "Справочник организаций23377",
    "name": "СписокОрганизаций",
    "objectType": "query",
    "root": {
        "tableId": "buhta/core-tests/schema/Организация.table",
        "children": [{
            "fieldSource": "Номер",
            "key": "6gedsdjoys7xarhiq074"
        }, {
            "fieldSource": "Название",
            "key": "u5jyspjkdzgisxo9s1i7"
        }, {
            "fieldSource": "Директор",
            "tableId": "buhta/core-tests/schema/Сотрудник.table",
            "children": [{
                "fieldSource": "Номер",
                "fieldCaption": "ДирНомер178",
                "key": "4a4zyedcrvp51agle97r"
            }, {
                "fieldSource": "Фамилия",
                "fieldCaption": "Дир-Фамилия",
                "isHidden": true,
                "key": "ab9q1ybcpzggauporf12"
            }, {
                "fieldSource": "Отчество",
                "key": "c3f1pcehvwe34svkwymq"
            }, {
                "fieldSource": "ИНН",
                "key": "cl83t7uxume9m2d21kdo"
            }, {
                "fieldSource": "ДатаРождения",
                "fieldCaption": "Рожд",
                "key": "vb5j74db5kf09mkfuyys"
            }],
            "key": "l6anp58t4qdz1oh0gejn"
        }, {
            "fieldSource": "ИНН",
            "key": "3c0r1vzdyb2gopprdilj"
        }, {
            "fieldSource": "Ключ",
            "key": "0vm7hw8yfekk3eb5hlwv"
        }],
        "key": "wd23kkox58ji1h127mvp"
    },
    "createdBy": "Иванов17-20",
    "createdDate": "<DateTime>2017-12-18 14:25:42.240",
    "changedBy": "Иванов17-20",
    "changedDate": "<DateTime>2017-12-20 11:03:54.151",
    "sqlBefore": "USE [MAG3666]\nGO\n/****** Object:  StoredProcedure [dbo].[Export_Add_Subconto]    Script Date: 19.12.2017 10:55:08 ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n{{034043034}}\n\nALTER  PROCEDURE [dbo].[Export_Add_Subconto]\n  @SubcontoNum VARCHAR(32), \n  @SubcontoName VARCHAR(50), \n  @SubcontoID INT OUTPUT , \n  @SubcontoType VARCHAR(5) OUTPUT\nAS\nBEGIN\n  --Используется для экспорта документов в DBF-формате из \"Бизнес-софт\"\n  --Режим реализован ввиде карточки пользователя\n  DECLARE @s VARCHAR(32)\n  SET @SubcontoID=ISNULL((SELECT Top 1 SubcontoID FROM #CashTable WHERE Number=@SubcontoNum AND SubcontoType=@SubcontoType),0)\n  IF @SubcontoID=0\n  BEGIN\n      IF @SubcontoType='Орг'\n      BEGIN\n         SET @SubcontoID= ISNULL((SELECT Top 1 Ключ FROM [Организация] WITH (NOLOCK) WHERE Номер = @SubcontoNum),0)\n         IF @SubcontoID={{response.data.error}}\n         BEGIN\n           BEGIN TRAN\n             INSERT [Организация] WITH(TABLOCK) (Номер, Название) VALUES(@SubcontoNum, @SubcontoName)\n             SET @SubcontoID=IDENT_CURRENT('Организация')\n           COMMIT\n         END\n      END\n      ELSE      \n      IF @SubcontoType='ОС'\n      BEGIN\n        SET @SubcontoID= ISNULL((SELECT Top 1 Ключ FROM [ОС] WITH (NOLOCK) WHERE Номер = @SubcontoNum),0)\n        IF @SubcontoID=0\n        BEGIN\n           BEGIN TRAN\n             INSERT [ОС] WITH(TABLOCK) (Номер, Название) VALUES(@SubcontoNum, {{response.data.error}})\n             SET @SubcontoID=IDENT_CURRENT('ОС')\n           COMMIT\n         END\n      END\n      ELSE\n      IF @SubcontoType='Пар'\n      BEGIN\n        SET @SubcontoID= ISNULL((SELECT Top 1 Ключ FROM [Партия ТМЦ] WITH (NOLOCK) WHERE Номер = @SubcontoNum),0)\n        IF @SubcontoID=0\n        BEGIN \n          BEGIN TRAN\n            INSERT [Партия ТМЦ] WITH(TABLOCK) (Номер, Название) VALUES(@SubcontoNum, @SubcontoName)\n            SET @SubcontoID=IDENT_CURRENT('Партия ТМЦ')\n          COMMIT\n        END\n      END\n      ELSE\n      IF @SubcontoType={{axios.post}}\n      BEGIN\n        SET @SubcontoID=0\n        IF LEN(@SubcontoNum)<=3\n        BEGIN\n          SET @SubcontoID=ISNULL((SELECT Top 1 Ключ FROM [Подразделение] WITH (NOLOCK) WHERE Номер = REPLICATE('0', 3 - LEN(@SubcontoNum)) + @SubcontoNum),0)\n        END\n        IF @SubcontoID=0\n        BEGIN\n          SET @SubcontoID= ISNULL((SELECT Top 1 Ключ FROM [Подразделение] WITH (NOLOCK) WHERE Номер = @SubcontoNum),0)\n          IF @SubcontoID=0\n          BEGIN\n            SET @s= @SubcontoNum\n            IF LEN(@SubcontoNum)<=3\n            BEGIN\n              SET @s = REPLICATE('0', 3 - LEN(@SubcontoNum)) + @SubcontoNum\n            END\n            BEGIN TRAN\n              INSERT [Подразделение] WITH(TABLOCK) (Номер, Название) VALUES(@s, @SubcontoName)\n              SET @SubcontoID=IDENT_CURRENT('Подразделение')\n            COMMIT\n          END\n        END\n      END\n      ELSE\n      IF @SubcontoType='Прч'\n      BEGIN\n        SET @SubcontoID= ISNULL((SELECT Top 1 Ключ FROM [Прочий] WITH (NOLOCK) WHERE Номер = @SubcontoNum),0)\n        IF @SubcontoID=0\n        BEGIN\n          BEGIN TRAN\n            INSERT [Прочий] WITH(TABLOCK) (Номер, Название) VALUES(@SubcontoNum, @SubcontoName)\n            SET @SubcontoID=IDENT_CURRENT('Прочий')\n          COMMIT\n        END\n      END\n      ELSE\n      IF @SubcontoType='ТМЦ'\n      BEGIN\n        SET @SubcontoID= ISNULL((SELECT Top 1 Ключ FROM [ТМЦ] WITH (NOLOCK) WHERE Номер = @SubcontoNum),0)\n        IF @SubcontoID=0\n        BEGIN\n          BEGIN TRAN\n            INSERT [ТМЦ] WITH(TABLOCK) (Номер, Название) VALUES(@SubcontoNum, @SubcontoName)\n            SET @SubcontoID=IDENT_CURRENT('ТМЦ')\n          COMMIT\n        END\n      END\n      ELSE\n      IF @SubcontoType='Чел'\n      BEGIN\n        SET @SubcontoID= ISNULL((SELECT Top 1 Ключ FROM [Сотрудник] WITH (NOLOCK) WHERE Номер = @SubcontoNum),0)\n        IF @SubcontoID=0\n        BEGIN\n          BEGIN TRAN\n            DECLARE @FirstName VARCHAR(32)\n            DECLARE @SecondName VARCHAR(32)\n            DECLARE @ThridName VARCHAR(32)\n            DECLARE @sss varchar(150)\n            SET @ThridName = ''\n    SET @sss = ''\n    SET @FirstName = ''\n    SET @SecondName=''\n    DECLARE @SpaceINDex INT\n    SET @SpaceINDex=CHARINDEX(CHAR(32), @SubcontoName)\n    IF @SpaceINDex<>0\n    BEGIN\n      SET @ThridName = SUBSTRING(@SubcontoName, 1, @SpaceINDex-1)\n      SET @sss = SUBSTRING(@SubcontoName, 1+LEN(@ThridName), LEN(@SubcontoName)-LEN(@ThridName)+1)\n      SET @sss = LTRIM(RTRIM(@sss))\n      SET @SpaceINDex=CHARINDEX(CHAR(32), @sss)\n      IF @SpaceINDex<>0\n        SET @FirstName = SUBSTRING(@sss, 1, @SpaceINDex-1)\n      ELSE\n        SET @FirstName=@sss\n      SET @SecondName=SUBSTRING(@sss, CHARINDEX(CHAR(32), @sss)+1, LEN(@sss)-LEN(@FirstName)+1) \n    END\n    ELSE\n     SET @ThridName = @SubcontoName      \n            {{#уроды.8900}}\n\n            INSERT [Сотрудник] WITH(TABLOCK)(Номер, Фамилия, Имя, Отчество) VALUES(@SubcontoNum, @ThridName,@FirstName,@SecondName)\n          COMMIT\n        END\n      END\n      ELSE \n      BEGIN \n         SET @SubcontoID=0 \n         SET @SubcontoType='Нет'\n      END\n      INSERT #CashTable (SubcontoType,SubcontoID,Number)\n         VALUES(@SubcontoType, @SubcontoID, @SubcontoNum)\n  END\n--  print @SubcontoType + ' ' +STR(@SubcontoID)\nEND\n\n\n\n\n\n\n\n\n\n\n\n",
    "sqlAfter": "USE [MAG3666]\nGO\n/****** Object:  StoredProcedure [dbo].[_авто_Документ_210_генерация]    Script Date: 20.12.2017 0:19:35 ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nALTER PROCEDURE [dbo].[_авто_Документ_210_генерация] (@DocID Int,@UseTempSaldo TinyInt=0,@Konturs VARCHAR(1000)='')\nAS\nDECLARE @CustomsPercent MONEY\n-- для алгоритма зачет аванса\nDECLARE @AvansSumma62 MONEY\nDECLARE @AvansSumma64 MONEY\nDECLARE @AvansOperDate SMALLDATETIME\nDECLARE @AvansDbDate   SMALLDATETIME\nDECLARE @AvansKrDate   SMALLDATETIME\nDECLARE @WithNullKorrsOk INT\nDECLARE @WithDiffKonturOk INT\nDECLARE @KontursNullOk INT\nDECLARE @KontursPustOk INT\nSET @WithNullKorrsOk =0\nSET @WithDiffKonturOk =0\nSET @WithNullKorrsOk = ISNULL((SELECT TOP 1 Значение FROM Настройка WITH(NOLOCK) WHERE Секция='Генерация проводок' AND Параметр='Генерация с пустым корр.счетом'),0)\nSET @WithDiffKonturOk= ISNULL((SELECT TOP 1 Значение FROM Настройка WITH(NOLOCK) WHERE Секция='Генерация проводок' AND Параметр='Генерация с разными контурами'),0)\nSET @KontursNullOk =0\nSET @KontursPustOk =0\nSET @Konturs=','+@Konturs+','\nIF @Konturs LIKE '%,<Пустой контур>,%' SET @KontursPustOk =1\nIF @Konturs LIKE '%,<Пустой счет>,%'   SET @KontursNullOk =1\nBEGIN TRANSACTION\n\n  IF @Konturs>',,'\n  BEGIN\n    DELETE Проводка WITH(ROWLOCK) FROM Проводка\n      LEFT OUTER JOIN Счет ДбСчет ON ДбСчет.Номер=Проводка.Дебет\n      LEFT OUTER JOIN Счет КрСчет ON КрСчет.Номер=Проводка.Кредит\n      WHERE Документ=@DocID AND ГенТип>0 \n            AND (@Konturs LIKE \n            '%,'+(case when @KontursNullOk=1 and ДбСчет.[Контур учета] IS NULL then '<Пустой счет>' when @KontursPustOk=1 and ltrim(rtrim(ДбСчет.[Контур учета]))='' then '<Пустой контур>' else ДбСчет.[Контур учета] end)+',%' \n              OR @Konturs LIKE \n            '%,'+(case when @KontursNullOk=1 and КрСчет.[Контур учета] IS NULL then '<Пустой счет>' when @KontursPustOk=1 and ltrim(rtrim(КрСчет.[Контур учета]))='' then '<Пустой контур>' else КрСчет.[Контур учета] end)+',%')\n            AND (@WithNullKorrsOk=1 OR \n                ( (case when @KontursNullOk=1 and ДбСчет.[Контур учета] IS NULL then '<Пустой счет>' else ДбСчет.[Контур учета] end) IS NOT NULL \n              AND (case when @KontursNullOk=1 and КрСчет.[Контур учета] IS NULL then '<Пустой счет>' else КрСчет.[Контур учета] end) IS NOT NULL) )\n            AND (@WithDiffKonturOk=1 \n                 OR (case when @KontursNullOk=1 and ДбСчет.[Контур учета] IS NULL then '<Пустой счет>' else ДбСчет.[Контур учета] end)=\n                    (case when @KontursNullOk=1 and КрСчет.[Контур учета] IS NULL then '<Пустой счет>' else КрСчет.[Контур учета] end) \n                 OR (@WithNullKorrsOk=1 AND ДбСчет.[Контур учета] IS NULL AND @Konturs LIKE \n        '%,'+(case when @KontursNullOk=1 and КрСчет.[Контур учета] IS NULL then '<Пустой счет>' when @KontursPustOk=1 and ltrim(rtrim(КрСчет.[Контур учета]))='' then '<Пустой контур>' else КрСчет.[Контур учета] end)+',%')\n                 OR (@WithNullKorrsOk=1 AND КрСчет.[Контур учета] IS NULL AND @Konturs LIKE \n        '%,'+(case when @KontursNullOk=1 and ДбСчет.[Контур учета] IS NULL then '<Пустой счет>' when @KontursPustOk=1 and ltrim(rtrim(ДбСчет.[Контур учета]))='' then '<Пустой контур>' else ДбСчет.[Контур учета] end)+',%'))\n  END\n  ELSE\n    DELETE FROM Проводка WITH(ROWLOCK) WHERE Документ=@DocID AND ГенТип>0\n  SELECT * INTO #Документ FROM Документ WITH(NOLOCK) WHERE [Ключ]=@DocID\n  IF (SELECT TOP 1 [Проведен] FROM [#Документ])=0\n  BEGIN\n    UPDATE Документ SET [Ошибки генерации]=0 WHERE [Ключ]=@DocID\n    EXECUTE [Заполнение суммы документа] @DocID,2\n    COMMIT\n    RETURN\n  END\n  SELECT * INTO #Докспец FROM Докспец WITH(NOLOCK) WHERE [Документ]=@DocID\n  CREATE UNIQUE CLUSTERED INDEX [IX_Докспец_Ключ1234565] ON [#Докспец] (Вид, Ключ)\n  SELECT * INTO #Договор FROM Договор WITH(NOLOCK) WHERE [Ключ]=(SELECT [Договор] FROM [#Документ])\n\nCREATE TABLE #ГенПроводка (\n  [Ключ] INT IDENTITY(1,1),\n  [Вид] INT NOT NULL DEFAULT(0),\n  [Дата] [datetime] NOT NULL  DEFAULT(0),\n  [Юр.лицо] [smallint] NOT NULL  DEFAULT(0),\n  [Дебет] [varchar] (10) NOT NULL DEFAULT(''),\n  [Дб тип субконто 1] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Дб субконто 1] [int] NOT NULL  DEFAULT(0),\n  [Дб тип субконто 2] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Дб субконто 2] [int] NOT NULL  DEFAULT(0),\n  [Дб тип субконто 3] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Дб субконто 3] [int] NOT NULL  DEFAULT(0),\n  [Дб тип субконто 4] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Дб субконто 4] [int] NOT NULL  DEFAULT(0),\n  [Дб тип субконто 5] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Дб субконто 5] [int] NOT NULL  DEFAULT(0),\n  [Дб количество] [money] NOT NULL  DEFAULT(0),\n  [Дб количество 2] [money] NOT NULL  DEFAULT(0),\n  [Кредит] [varchar] (10) NOT NULL DEFAULT(''),\n  [Кр тип субконто 1] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Кр субконто 1] [int] NOT NULL  DEFAULT(0),\n  [Кр тип субконто 2] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Кр субконто 2] [int] NOT NULL  DEFAULT(0),\n  [Кр тип субконто 3] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Кр субконто 3] [int] NOT NULL  DEFAULT(0),\n  [Кр тип субконто 4] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Кр субконто 4] [int] NOT NULL  DEFAULT(0),\n  [Кр тип субконто 5] [varchar] (3) NOT NULL DEFAULT('Нет'),\n  [Кр субконто 5] [int] NOT NULL  DEFAULT(0),\n  [Кр количество] [money] NOT NULL  DEFAULT(0),\n  [Кр количество 2] [money] NOT NULL  DEFAULT(0),\n  [Сумма] [money] NOT NULL  DEFAULT(0),\n  [Валюта] [smallint] NOT NULL  DEFAULT(0),\n  [Сумма руб.] [money] NOT NULL  DEFAULT(0),\n  [Курс руб.] VARCHAR(20) NOT NULL  DEFAULT(''),\n  [Сумма у.е.] [money] NOT NULL  DEFAULT(0),\n  [Курс у.е.] VARCHAR(20) NOT NULL  DEFAULT(''),\n  [Входит в сумму] [bit] NOT NULL DEFAULT(0),\n  [Примечание] VARCHAR(500) NOT NULL  DEFAULT(''),\n  [Ошибки генерации] [int] NOT NULL DEFAULT(0),\n  [Зарплата] [int] NOT NULL DEFAULT(0),\n  [Докспец] [int] NOT NULL DEFAULT(0),\n  [Не формировать проводку] [bit] NOT NULL DEFAULT(0))\n\n  DECLARE @DbKontur VARCHAR(20)\n  DECLARE @KrKontur VARCHAR(20)\n  DECLARE @ErrorCount INT\n  SET @ErrorCount=0\n  DECLARE @NeedChangeDbKr TINYINT\n  DECLARE @Vid INT\n  DECLARE @Kontora TINYINT\n  DECLARE @DocDate_ForGenFilter DATETIME\n  DECLARE @Date DATETIME\n  DECLARE @DateFIFO DATETIME\n  DECLARE @DateFirst DateTime\n  DECLARE @Debet VARCHAR(10)\n  DECLARE @DateLast DateTime\n  DECLARE @DbSubconto1Type VARCHAR(3)\n  DECLARE @DbSubconto1 INT\n  DECLARE @DbSubconto2Type VARCHAR(3)\n  DECLARE @DbSubconto2 INT\n  DECLARE @DbSubconto3Type VARCHAR(3)\n  DECLARE @DbSubconto3 INT\n  DECLARE @DbSubconto4Type VARCHAR(3)\n  DECLARE @DbSubconto4 INT\n  DECLARE @DbSubconto5Type VARCHAR(3)\n  DECLARE @DbSubconto5 INT\n  DECLARE @DbKol MONEY\n  DECLARE @DbKol2 MONEY\n  DECLARE @PartDbKol MONEY\n  DECLARE @PartDbKol2 MONEY\n  DECLARE @DbNetto MONEY\n  DECLARE @DbBrutto MONEY\n  DECLARE @Kredit VARCHAR(10)\n  DECLARE @KrSubconto1Type VARCHAR(3)\n  DECLARE @KrSubconto1 INT\n  DECLARE @KrSubconto2Type VARCHAR(3)\n  DECLARE @KrSubconto2 INT\n  DECLARE @KrSubconto3Type VARCHAR(3)\n  DECLARE @KrSubconto3 INT\n  DECLARE @KrSubconto4Type VARCHAR(3)\n  DECLARE @KrSubconto4 INT\n  DECLARE @KrSubconto5Type VARCHAR(3)\n  DECLARE @KrSubconto5 INT\n  DECLARE @KrNetto MONEY\n  DECLARE @KrBrutto MONEY\n  DECLARE @KrKol MONEY\n  DECLARE @KrKol2 MONEY\n  DECLARE @Summa MONEY\n  DECLARE @Valuta SMALLINT\n  DECLARE @SummaRub MONEY\n  DECLARE @KursRub VARCHAR(20)\n  DECLARE @SummaUSD MONEY\n  DECLARE @KursUSD VARCHAR(20)\n  DECLARE @InSumma BIT\n  DECLARE @Note VARCHAR(500)\n  DECLARE @DocSpec INT\n  DECLARE @WithoutCreate BIT -- 1 - не создавать проводку (проводка удаляется после генерации остальных проводок)\n  DECLARE @FIFOErrorMode TinyInt -- 0 - создавать проводку с ошибкой FIFO, 1 - создавать с предупреждением, 2 - не создавать\n  DECLARE @FIFOErrorMsg Varchar(100)\n  DECLARE @NoteFromSource BIT\n  DECLARE @NoteGenProv VARCHAR(50)\n  DECLARE @RoundFIFOKol2 SMALLINT\n  DECLARE @CheckKol2ByFIFO BIT\n  DECLARE @CheckKol2BySource BIT\n\nSET @Kontora = ISNULL((SELECT [Юр.лицо] FROM Документ WITH(NOLOCK) WHERE Ключ=@DocID), 0)\nSET @DocDate_ForGenFilter = ISNULL((SELECT [Дата] FROM Документ WITH(NOLOCK) WHERE Ключ=@DocID), 0)\n  DECLARE  @FIFOSaldoSubconto1Type VARCHAR(3)\n  DECLARE  @FIFOSaldoSubconto1 INT\n  DECLARE  @FIFOSaldoSubconto2Type VARCHAR(3)\n  DECLARE  @FIFOSaldoSubconto2 INT\n  DECLARE  @FIFOSaldoSubconto3Type VARCHAR(3)\n  DECLARE  @FIFOSaldoSubconto3 INT\n  DECLARE  @FIFOSaldoSubconto4Type VARCHAR(3)\n  DECLARE  @FIFOSaldoSubconto4 INT\n  DECLARE  @FIFOSaldoSubconto5Type VARCHAR(3)\n  DECLARE  @FIFOSaldoSubconto5 INT\n  DECLARE  @FIFOSaldoKol MONEY\n  DECLARE  @FIFOSaldoKol2 MONEY\n  DECLARE  @FIFOSaldoSumma MONEY\n  DECLARE  @FIFOSaldoSummaRub MONEY\n  DECLARE  @FIFOSaldoSummaUSD MONEY\n  DECLARE  @FIFONeedSumma MONEY\n  DECLARE  @ValutaStr VarChar(20)\n  DECLARE  @FIFONeedSummaSaved MONEY\n  DECLARE  @FIFONeedSummaRub MONEY\n  DECLARE  @FIFONeedSummaUSD MONEY\n  DECLARE  @FIFONeedKol MONEY\n  DECLARE  @FIFONeedKolSaved MONEY\n  DECLARE  @FIFONeedKol2 MONEY\n  DECLARE  @FIFOKol2All MONEY\n  DECLARE @OperDate DATETIME\n  IF @UseTempSaldo=0\n    SELECT  @OperDate=ISNULL([Дата],0) FROM СальдоДата WITH(NOLOCK) WHERE [Юр.лицо]=(SELECT [Юр.лицо] FROM [Документ] WITH(NOLOCK) WHERE [Ключ]=@DocID)\n  ELSE\n    SELECT  TOP 1 @OperDate=ISNULL(MAX([Дата]),0) FROM #FIFOSaldo\n\n  DECLARE @SourceSpecID Int\n  DECLARE @SourceSpecVid Int\n\n  DECLARE SourceSpecCurs210 CURSOR LOCAL STATIC FOR\n    SELECT [Ключ],[Вид] FROM #Докспец WITH(NOLOCK) WHERE Документ=@DocID\n\n  OPEN SourceSpecCurs210\n\n  FETCH NEXT FROM SourceSpecCurs210 INTO @SourceSpecID,@SourceSpecVid\n  WHILE @@FETCH_STATUS = 0\n  BEGIN\n    IF @SourceSpecVid=210001\n    BEGIN\n      SET  @Vid=0\n      SET @AvansSumma62 = 0\n      SET @AvansSumma64 = 0\n      SET @WithoutCreate = 0\n      SET @FIFOErrorMode = 0\n      SET @FIFOErrorMsg  = 'Ошибка FIFO' \n      SET @NoteFromSource = 0\n      SET @NoteGenProv = ''\n      SET @RoundFIFOKol2 = 4\n      SET @CheckKol2ByFIFO = 0\n      SET @CheckKol2BySource = 0\n      SELECT\n         @Vid=210001,\n         @Date=CASE [Докспец].[Дата] WHEN '19000101' THEN [Документ].[Дата] ELSE [Докспец].[Дата] END,\n         @CustomsPercent=ISNULL([Докспец].[Ставка таможенной пошлины], 0),\n         @DateFIFO=@Date,\n         @Debet='41.2',\n         @DbSubconto1Type=[Документ].[Тип поставщика],\n         @DbSubconto1=[Документ].[Поставщик],\n         @DbSubconto2Type=[Докспец].[Тип субконто 1],\n         @DbSubconto2=[Докспец].[Субконто 1],\n         @DbSubconto3Type=[Докспец].[Тип субконто 2],\n         @DbSubconto3=[Докспец].[Субконто 2],\n         @DbSubconto4Type='Нет',\n         @DbSubconto4=0,\n         @DbSubconto5Type='Нет',\n         @DbSubconto5=0,\n         @DbKol=[Докспец].[Количество],\n         @DbKol2=0,\n         @DbNetto= ISNULL([Докспец].[Нетто], 0),\n         @DbBrutto= ISNULL([Докспец].[Брутто], 0),\n         @KrNetto= 0,\n         @KrBrutto= 0,\n         @Kredit='41.2',\n         @KrSubconto1Type=[Документ].[Тип поставщика],\n         @KrSubconto1=[Документ].[Поставщик],\n         @KrSubconto2Type=[Докспец].[Тип субконто 1],\n         @KrSubconto2=[Докспец].[Субконто 1],\n         @KrSubconto3Type=[Докспец].[Тип субконто 2],\n         @KrSubconto3=[Докспец].[Субконто 2],\n         @KrSubconto4Type='Нет',\n         @KrSubconto4=0,\n         @KrSubconto5Type='Нет',\n         @KrSubconto5=0,\n         @KrKol=[Докспец].[Количество],\n         @KrKol2=0,\n         @Summa=0,\n         @Valuta=99,\n         @SummaRub=0,\n         @KursRub='',\n         @SummaUSD=0,\n         @KursUSD='',\n         @InSumma=1,\n        @Note='',\n        -- SQLSelect (начало), спец. [1]  Приход товара, пров. [1]  Расход товара\n  @DbSubconto1=isnull((select ПодрРезерв from _Магазин where ключ=Договор._Магазин),Документ.Поставщик),\n  @DbSubconto3Type=(case when Докспец.[субконто 2]<>0 then Докспец.[тип субконто 2] else 'Нет' end),\n  @KrSubconto3Type=(case when Докспец.[субконто 2]<>0 then Докспец.[тип субконто 2] else 'Нет' end),\n   @KrKol=(case when [dbo].[_ЭтоУслуга](Докспец.[Субконто 1])=1 then 0\n                when [dbo].[_ЭтоСвоеПодразделение](Документ.Поставщик)=0 then 0\n                when Докспец.[_СтатусЗаказа]='Ожидание товара' then 0 else Докспец.Количество end )\n        -- SQLSelect (конец), спец. [1]  Приход товара, пров. [1]  Расход товара\n\n        FROM #Докспец Докспец\n          LEFT OUTER JOIN #Документ Документ\n            LEFT OUTER JOIN #Договор Договор ON [Документ].[Договор]=[Договор].[Ключ]\n          ON [Докспец].[Документ]=[Документ].[Ключ]\n        WHERE Докспец.Ключ=@SourceSpecID\n----- фильтрация по контурам учета\n      IF @Konturs>',,'\n      BEGIN \n        SET @DbKontur=(SELECT [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер=@Debet)\n        SET @KrKontur=(SELECT [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер=@Kredit)\n        IF @KontursPustOk =1\n        BEGIN\n          IF @DbKontur='' SET @DbKontur='<Пустой контур>'\n          IF @KrKontur='' SET @KrKontur='<Пустой контур>'\n        END\n        IF @KontursNullOk =1\n        BEGIN\n          IF @DbKontur IS NULL SET @DbKontur='<Пустой счет>'\n          IF @KrKontur IS NULL SET @KrKontur='<Пустой счет>'\n        END\n      END \n      IF @Konturs=',,' OR \n         (   (@Konturs LIKE '%,'+@DbKontur+',%' OR @Konturs LIKE '%,'+@KrKontur+',%')\n         AND (@WithNullKorrsOk=1 OR (@DbKontur IS NOT NULL AND @KrKontur IS NOT NULL))\n         AND (@WithDiffKonturOk=1 OR @DbKontur=@KrKontur OR @DbKontur IS NULL OR @KrKontur IS NULL OR \n             (@WithNullKorrsOk=1 AND @DbKontur='<Пустой счет>' and @Konturs LIKE '%,'+@KrKontur+',%') OR (@WithNullKorrsOk=1 AND @KrKontur='<Пустой счет>' and @Konturs LIKE '%,'+@DbKontur+',%') ) )\n      BEGIN \n\n    IF @Vid<>0\n    BEGIN\n      IF @UseTempSaldo=0\n      BEGIN\n  SET @DateFIFO = @Date\nSet @DateFirst = dbo.[Первый день месяца](@DateFIFO)\nSet @DateLast = dbo.[Последний день месяца](@DateFIFO)\n        DECLARE FIFOSaldoCurs4 CURSOR LOCAL STATIC FOR\n        SELECT\n          OBOROT.Валюта,\n          SUM(OBOROT.[Количество]),\n          SUM(OBOROT.[Количество 2]),\n          SUM(OBOROT.[Сумма]),\n          SUM(OBOROT.[Сумма руб.]),\n          SUM(OBOROT.[Сумма у.е.])\n        FROM (\n          SELECT [Юр.лицо],\n          Валюта,\n          SUM([Сумма]) [Сумма],\n          SUM([Сумма руб.]) [Сумма руб.],\n          SUM([Сумма у.е.]) [Сумма у.е.],\n          SUM([Количество]) Количество,\n          SUM([Количество 2]) [Количество 2]\n          FROM Сальдо WITH(NOLOCK)\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Счет=@Kredit AND\n            [Тип субконто 1]=@KrSubconto1Type AND\n            [Субконто 1]=@KrSubconto1 AND\n            [Тип субконто 2]=@KrSubconto2Type AND\n            [Субконто 2]=@KrSubconto2 AND\n            [Тип субконто 3]=@KrSubconto3Type AND\n            [Субконто 3]=@KrSubconto3 \n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          SUM([Сумма]) [Сумма],\n          SUM([Сумма руб.]) [Сумма руб.],\n          SUM([Сумма у.е.]) [Сумма у.е.],\n          SUM([Дб количество]),\n          SUM([Дб количество 2])\n          FROM Проводка WITH(NOLOCK)\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Документ<>@DocID AND\n            Дебет=@Kredit AND\n            [Дб тип субконто 1]=@KrSubconto1Type AND\n            [Дб субконто 1]=@KrSubconto1 AND\n            [Дб тип субконто 2]=@KrSubconto2Type AND\n            [Дб субконто 2]=@KrSubconto2 AND\n            [Дб тип субконто 3]=@KrSubconto3Type AND\n            [Дб субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          -SUM([Сумма]) [Сумма],\n          -SUM([Сумма руб.]) [Сумма руб.],\n          -SUM([Сумма у.е.]) [Сумма у.е.],\n          -SUM([Кр количество]),\n          -SUM([Кр количество 2])\n          FROM Проводка WITH(NOLOCK)\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Документ<>@DocID AND\n            Кредит=@Kredit AND\n            [Кр тип субконто 1]=@KrSubconto1Type AND\n            [Кр субконто 1]=@KrSubconto1 AND\n            [Кр тип субконто 2]=@KrSubconto2Type AND\n            [Кр субконто 2]=@KrSubconto2 AND\n            [Кр тип субконто 3]=@KrSubconto3Type AND\n            [Кр субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          SUM([Сумма]) [Сумма],\n          SUM([Сумма руб.]) [Сумма руб.],\n          SUM([Сумма у.е.]) [Сумма у.е.],\n          SUM([Дб количество]),\n          SUM([Дб количество 2])\n          FROM #ГенПроводка\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Дебет=@Kredit AND\n            [Дб тип субконто 1]=@KrSubconto1Type AND\n            [Дб субконто 1]=@KrSubconto1 AND\n            [Дб тип субконто 2]=@KrSubconto2Type AND\n            [Дб субконто 2]=@KrSubconto2 AND\n            [Дб тип субконто 3]=@KrSubconto3Type AND\n            [Дб субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          -SUM([Сумма]) [Сумма],\n          -SUM([Сумма руб.]) [Сумма руб.],\n          -SUM([Сумма у.е.]) [Сумма у.е.],\n          -SUM([Кр количество]),\n          -SUM([Кр количество 2])\n          FROM #ГенПроводка\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Кредит=@Kredit AND\n            [Кр тип субконто 1]=@KrSubconto1Type AND\n            [Кр субконто 1]=@KrSubconto1 AND\n            [Кр тип субконто 2]=@KrSubconto2Type AND\n            [Кр субконто 2]=@KrSubconto2 AND\n            [Кр тип субконто 3]=@KrSubconto3Type AND\n            [Кр субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n         ) OBOROT\n             WHERE (1=1) \n         GROUP BY OBOROT.[Юр.лицо],OBOROT.[Валюта]\n          HAVING SUM(OBOROT.[Количество])>0\n          ORDER BY OBOROT.[Юр.лицо],\n          OBOROT.[Валюта]\n      END\n      ELSE\n      BEGIN\n  SET @DateFIFO = @Date\nSet @DateFirst = dbo.[Первый день месяца](@DateFIFO)\nSet @DateLast = dbo.[Последний день месяца](@DateFIFO)\n        DECLARE FIFOSaldoCurs4 CURSOR LOCAL STATIC FOR\n        SELECT\n          OBOROT.Валюта,\n          SUM(OBOROT.[Количество]),\n          SUM(OBOROT.[Количество 2]),\n          SUM(OBOROT.[Сумма]),\n          SUM(OBOROT.[Сумма руб.]),\n          SUM(OBOROT.[Сумма у.е.])\n        FROM (\n          SELECT [Юр.лицо],\n          Валюта,\n          SUM([Сумма]) [Сумма],\n          SUM([Сумма руб.]) [Сумма руб.],\n          SUM([Сумма у.е.]) [Сумма у.е.],\n          SUM([Количество]) Количество,\n          SUM([Количество 2]) [Количество 2]\n          FROM #FIFOSaldo\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Счет=@Kredit AND\n            [Тип субконто 1]=@KrSubconto1Type AND\n            [Субконто 1]=@KrSubconto1 AND\n            [Тип субконто 2]=@KrSubconto2Type AND\n            [Субконто 2]=@KrSubconto2 AND\n            [Тип субконто 3]=@KrSubconto3Type AND\n            [Субконто 3]=@KrSubconto3 \n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          SUM([Сумма]) [Сумма],\n          SUM([Сумма руб.]) [Сумма руб.],\n          SUM([Сумма у.е.]) [Сумма у.е.],\n          SUM([Дб количество]),\n          SUM([Дб количество 2])\n          FROM Проводка WITH(NOLOCK)\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Документ<>@DocID AND\n            Дебет=@Kredit AND\n            [Дб тип субконто 1]=@KrSubconto1Type AND\n            [Дб субконто 1]=@KrSubconto1 AND\n            [Дб тип субконто 2]=@KrSubconto2Type AND\n            [Дб субконто 2]=@KrSubconto2 AND\n            [Дб тип субконто 3]=@KrSubconto3Type AND\n            [Дб субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          -SUM([Сумма]) [Сумма],\n          -SUM([Сумма руб.]) [Сумма руб.],\n          -SUM([Сумма у.е.]) [Сумма у.е.],\n          -SUM([Кр количество]),\n          -SUM([Кр количество 2])\n          FROM Проводка WITH(NOLOCK)\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Документ<>@DocID AND\n            Кредит=@Kredit AND\n            [Кр тип субконто 1]=@KrSubconto1Type AND\n            [Кр субконто 1]=@KrSubconto1 AND\n            [Кр тип субконто 2]=@KrSubconto2Type AND\n            [Кр субконто 2]=@KrSubconto2 AND\n            [Кр тип субконто 3]=@KrSubconto3Type AND\n            [Кр субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          SUM([Сумма]) [Сумма],\n          SUM([Сумма руб.]) [Сумма руб.],\n          SUM([Сумма у.е.]) [Сумма у.е.],\n          SUM([Дб количество]),\n          SUM([Дб количество 2])\n          FROM #ГенПроводка\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Дебет=@Kredit AND\n            [Дб тип субконто 1]=@KrSubconto1Type AND\n            [Дб субконто 1]=@KrSubconto1 AND\n            [Дб тип субконто 2]=@KrSubconto2Type AND\n            [Дб субконто 2]=@KrSubconto2 AND\n            [Дб тип субконто 3]=@KrSubconto3Type AND\n            [Дб субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n          UNION ALL\n          SELECT [Юр.лицо],Валюта,\n          -SUM([Сумма]) [Сумма],\n          -SUM([Сумма руб.]) [Сумма руб.],\n          -SUM([Сумма у.е.]) [Сумма у.е.],\n          -SUM([Кр количество]),\n          -SUM([Кр количество 2])\n          FROM #ГенПроводка\n          WHERE\n            [Юр.лицо]=@Kontora AND\n            Кредит=@Kredit AND\n            [Кр тип субконто 1]=@KrSubconto1Type AND\n            [Кр субконто 1]=@KrSubconto1 AND\n            [Кр тип субконто 2]=@KrSubconto2Type AND\n            [Кр субконто 2]=@KrSubconto2 AND\n            [Кр тип субконто 3]=@KrSubconto3Type AND\n            [Кр субконто 3]=@KrSubconto3 AND\n            Дата BETWEEN @OperDate AND @DateFIFO\n          GROUP BY [Юр.лицо],Валюта\n         ) OBOROT\n             WHERE (1=1) \n         GROUP BY OBOROT.[Юр.лицо],OBOROT.[Валюта]\n          HAVING SUM(OBOROT.[Количество])>0\n          ORDER BY OBOROT.[Юр.лицо],\n          OBOROT.[Валюта]\n      END\n      SET @FIFONeedKol=@KrKol\n      SET @FIFONeedKolSaved=@KrKol\n      SET @FIFONeedKol2=@KrKol2\n      SET @FIFOKol2All=0\n      OPEN FIFOSaldoCurs4\n      FETCH NEXT FROM FIFOSaldoCurs4 INTO\n        @Valuta,\n        @FIFOSaldoKol,\n        @FIFOSaldoKol2,\n        @FIFOSaldoSumma,\n        @FIFOSaldoSummaRub,\n        @FIFOSaldoSummaUSD\n        SET @PartDbKol  = @DbKol -- переменные введены для обнуления дебетового кол-ва при работе по FIFO 24.05.2004\n        SET @PartDbKol2 = @DbKol2\n      WHILE @@FETCH_STATUS = 0 AND @FIFONeedKol>0\n      BEGIN\n        IF @FIFONeedKol<@FIFOSaldoKol  -- товара больше чем надо\n        BEGIN\n          SET @DocSpec=@SourceSpecID\n          INSERT #ГенПроводка (\n            [Вид],[Юр.лицо],[Дата],\n            [Дебет],\n            [Дб тип субконто 1],[Дб субконто 1],\n            [Дб тип субконто 2],[Дб субконто 2],\n            [Дб тип субконто 3],[Дб субконто 3],\n            [Дб тип субконто 4],[Дб субконто 4],\n            [Дб тип субконто 5],[Дб субконто 5],\n            [Дб количество],\n            [Дб количество 2],\n            [Кредит],\n            [Кр тип субконто 1],[Кр субконто 1],\n            [Кр тип субконто 2],[Кр субконто 2],\n            [Кр тип субконто 3],[Кр субконто 3],\n            [Кр тип субконто 4],[Кр субконто 4],\n            [Кр тип субконто 5],[Кр субконто 5],\n            [Кр количество],\n            [Кр количество 2],\n            [Сумма],[Валюта],[Сумма руб.],[Курс руб.],[Сумма у.е.],[Курс у.е.],[Входит в сумму],Докспец,[Не формировать проводку])\n          VALUES(\n            @Vid,@Kontora,@Date,\n            @Debet,\n            @DbSubconto1Type,@DbSubconto1,\n            @DbSubconto2Type,@DbSubconto2,\n            @DbSubconto3Type,@DbSubconto3,\n            @DbSubconto4Type,@DbSubconto4,\n            @DbSubconto5Type,@DbSubconto5,\n            @PartDbKol,\n            @PartDbKol2,\n            @Kredit,\n            @KrSubconto1Type,@KrSubconto1,\n            @KrSubconto2Type,@KrSubconto2,\n            @KrSubconto3Type,@KrSubconto3,\n            'Нет',0,\n            'Нет',0,\n            @FIFONeedKol,\n                  @KrKol2,\n            ROUND(@FIFONeedKol*(@FIFOSaldoSumma/(@FIFOSaldoKol+0.00000000)),2),\n            @Valuta,\n            0,\n            @KursRub,\n            0,\n            @KursUSD,@InSumma,@DocSpec,@WithoutCreate)\n          SET @FIFONeedKol=0\n        END\n      ELSE  -- товара меньше или равно чем надо - списывем все\n      BEGIN\n          SET @DocSpec=@SourceSpecID\n          INSERT #ГенПроводка (\n            [Вид],[Юр.лицо],[Дата],\n            [Дебет],\n            [Дб тип субконто 1],[Дб субконто 1],\n            [Дб тип субконто 2],[Дб субконто 2],\n            [Дб тип субконто 3],[Дб субконто 3],\n            [Дб тип субконто 4],[Дб субконто 4],\n            [Дб тип субконто 5],[Дб субконто 5],\n            [Дб количество],\n            [Дб количество 2],\n            [Кредит],\n            [Кр тип субконто 1],[Кр субконто 1],\n            [Кр тип субконто 2],[Кр субконто 2],\n            [Кр тип субконто 3],[Кр субконто 3],\n            [Кр тип субконто 4],[Кр субконто 4],\n            [Кр тип субконто 5],[Кр субконто 5],\n            [Кр количество],\n            [Кр количество 2],\n            [Сумма],[Валюта],[Сумма руб.],[Курс руб.],[Сумма у.е.],[Курс у.е.],[Входит в сумму],Докспец,[Не формировать проводку])\n          VALUES(\n            @Vid,@Kontora,@Date,\n            @Debet,\n            @DbSubconto1Type,@DbSubconto1,\n            @DbSubconto2Type,@DbSubconto2,\n            @DbSubconto3Type,@DbSubconto3,\n            @DbSubconto4Type,@DbSubconto4,\n            @DbSubconto5Type,@DbSubconto5,\n            @PartDbKol,\n            @PartDbKol2,\n            @Kredit,\n            @KrSubconto1Type,@KrSubconto1,\n            @KrSubconto2Type,@KrSubconto2,\n            @KrSubconto3Type,@KrSubconto3,\n            'Нет',0,\n            'Нет',0,\n            @FIFOSaldoKol,\n                  @KrKol2,\n            @FIFOSaldoSumma,\n            @Valuta,\n            @SummaRub,\n            @KursRub,\n            @SummaUSD,\n            @KursUSD,@InSumma,@DocSpec,@WithoutCreate)\n          SET @FIFONeedKol=@FIFONeedKol-@FIFOSaldoKol\n        END\n        FETCH NEXT FROM FIFOSaldoCurs4 INTO\n        @Valuta,\n          @FIFOSaldoKol,\n          @FIFOSaldoKol2,\n          @FIFOSaldoSumma,\n          @FIFOSaldoSummaRub,\n          @FIFOSaldoSummaUSD\n         SET @PartDbKol  = 0\n         SET @PartDbKol2 = 0\n      END\n      CLOSE FIFOSaldoCurs4\n      DEALLOCATE FIFOSaldoCurs4\n\n      -- партии кончились - смотрим сколько не хватило\n      IF @FIFONeedKol>0\n      BEGIN\n        IF @WithoutCreate=0 and @FIFOErrorMode=0\n        BEGIN\n          SET @ErrorCount=@ErrorCount+1\n          IF @UseTempSaldo=1\n            UPDATE #Errors SET Count=Count+1\n        END\n      If @FIFOErrorMode=0 SET @FIFOErrorMsg  = 'Ошибка FIFO' \n      If @FIFOErrorMode=1 SET @FIFOErrorMsg  = 'Предупреждение FIFO' \n        SET @ValutaStr=Isnull((Select Название From Валюта With(Nolock) Where Номер=@Valuta),'') \n          SET @DocSpec=@SourceSpecID\n        INSERT #ГенПроводка (\n            [Вид],[Юр.лицо],[Дата],\n            [Дебет],\n            [Дб тип субконто 1],[Дб субконто 1],\n            [Дб тип субконто 2],[Дб субконто 2],\n            [Дб тип субконто 3],[Дб субконто 3],\n            [Дб тип субконто 4],[Дб субконто 4],\n            [Дб тип субконто 5],[Дб субконто 5],\n            [Дб количество],\n            [Дб количество 2],\n            [Кредит],\n            [Кр тип субконто 1],[Кр субконто 1],\n            [Кр тип субконто 2],[Кр субконто 2],\n            [Кр тип субконто 3],[Кр субконто 3],\n            [Кр тип субконто 4],[Кр субконто 4],\n            [Кр тип субконто 5],[Кр субконто 5],\n            [Кр количество],\n            [Кр количество 2],\n            [Сумма],[Валюта],[Сумма руб.],[Курс руб.],[Сумма у.е.],[Курс у.е.],[Входит в сумму],\n            [Ошибки генерации],[Примечание],Докспец,[Не формировать проводку])\n          VALUES(\n            @Vid,@Kontora,@Date,\n            @Debet,\n            @DbSubconto1Type,@DbSubconto1,\n            @DbSubconto2Type,@DbSubconto2,\n            @DbSubconto3Type,@DbSubconto3,\n            @DbSubconto4Type,@DbSubconto4,\n            @DbSubconto5Type,@DbSubconto5,\n            @PartDbKol,\n            @PartDbKol2,\n            @Kredit,\n            @KrSubconto1Type,@KrSubconto1,\n            @KrSubconto2Type,@KrSubconto2,\n            @KrSubconto3Type,@KrSubconto3,\n            'Нет',0,\n            'Нет',0,\n            @FIFONeedKol,\n                  @KrKol2,\n            0,\n            @Valuta,\n            @SummaRub,@KursRub,\n            @SummaUSD,@KursUSD,\n                  @InSumma, (Case @WithoutCreate When 0 Then 1 Else 0 End),\n     @FIFOErrorMsg+' - не хватило '+Convert(Varchar,@FIFONeedKol),\n      @DocSpec,(Case @FIFOErrorMode When 2 Then 1 Else @WithoutCreate End))\n      END\n      END\n      END -- контуры кончаются\n    END\n    FETCH NEXT FROM SourceSpecCurs210 INTO @SourceSpecID,@SourceSpecVid\n  END\n\n  CLOSE SourceSpecCurs210\n  DEALLOCATE SourceSpecCurs210\n\n  INSERT Проводка WITH(ROWLOCK) (\n    [Документ],[Вид],[Дата],[Юр.лицо],\n    [Дебет],\n    [Дб тип субконто 1], [Дб субконто 1],\n    [Дб тип субконто 2], [Дб субконто 2],\n    [Дб тип субконто 3], [Дб субконто 3],\n    [Дб тип субконто 4], [Дб субконто 4],\n    [Дб тип субконто 5], [Дб субконто 5],\n    [Дб количество],\n    [Дб количество 2],\n    [Кредит],\n    [Кр тип субконто 1],[Кр субконто 1],\n    [Кр тип субконто 2],[Кр субконто 2],\n    [Кр тип субконто 3],[Кр субконто 3],\n    [Кр тип субконто 4],[Кр субконто 4],\n    [Кр тип субконто 5],[Кр субконто 5],\n    [Кр количество],\n    [Кр количество 2],\n    [Сумма],[Валюта],[Сумма руб.],[Курс руб.],[Сумма у.е.],[Курс у.е.],[Входит в сумму],[ГенТип],\n    [Примечание],[Ошибки генерации], [Зарплата],Докспец)\n\n  SELECT\n    @DocID,(case [Не формировать проводку] when 1 then -1*[Вид] else [Вид] end),[Дата],[Юр.лицо],\n    [Дебет],\n    [Дб тип субконто 1],[Дб субконто 1],\n    [Дб тип субконто 2],[Дб субконто 2],\n    [Дб тип субконто 3],[Дб субконто 3],\n    [Дб тип субконто 4],[Дб субконто 4],\n    [Дб тип субконто 5],[Дб субконто 5],\n    SUM([Дб количество]),\n    SUM([Дб количество 2]),\n    [Кредит],\n    [Кр тип субконто 1],[Кр субконто 1],\n    [Кр тип субконто 2],[Кр субконто 2],\n    [Кр тип субконто 3],[Кр субконто 3],\n    [Кр тип субконто 4],[Кр субконто 4],\n    [Кр тип субконто 5],[Кр субконто 5],\n    SUM([Кр количество]),\n    SUM([Кр количество 2]),\n    SUM(ROUND([Сумма],2)),[Валюта],\n    CASE [Валюта] WHEN dbo.[Код рубля]() THEN SUM(ROUND([Сумма],2)) ELSE SUM(ROUND([Сумма руб.],2)) END,\n    [Курс руб.],\n    CASE [Валюта] WHEN dbo.[Код у.е.]() THEN SUM(ROUND([Сумма],2)) ELSE SUM(ROUND([Сумма у.е.],2)) END,\n    [Курс у.е.],[Входит в сумму],1,\n    CASE\n      WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) \n      WHERE Ключ = #ГенПроводка.Вид) = 1) AND (Дебет = '') AND (Кредит <> '') THEN SUBSTRING(dbo.ДобавитьПереносЕслиНеПусто ([Примечание]) + 'Кредит проводки есть, а дебет пуст', 1, 100)\n      WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) \n      WHERE Ключ = #ГенПроводка.Вид) = 1) AND (Дебет <> '') AND (Кредит = '') THEN SUBSTRING(dbo.ДобавитьПереносЕслиНеПусто ([Примечание]) + 'Дебет проводки есть, а кредит пуст', 1, 100)\n      WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) WHERE Ключ = #ГенПроводка.Вид) = 1) \n           AND ((SELECT TOP 1 [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер = Дебет) <> (SELECT TOP 1 [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер = Кредит))\n           THEN SUBSTRING(dbo.ДобавитьПереносЕслиНеПусто ([Примечание]) + 'Дебет и Кредит относятся к различным контурам учета', 1, 100)\n      ELSE [Примечание]\n    END,\n    CASE\n      WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) WHERE Ключ = #ГенПроводка.Вид) = 1) AND (Дебет = '') AND (Кредит <> '') THEN SUM([Ошибки генерации]) + 1\n      WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) WHERE Ключ = #ГенПроводка.Вид) = 1) AND (Дебет <> '') AND (Кредит = '') THEN SUM([Ошибки генерации]) + 1\n      WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) WHERE Ключ = #ГенПроводка.Вид) = 1) \n      AND ((SELECT TOP 1 [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер = Дебет) <> (SELECT TOP 1 [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер = Кредит))\n           THEN SUM([Ошибки генерации]) + 1\n      ELSE SUM([Ошибки генерации])\n    END,\n    [Зарплата], Докспец\n  FROM #ГенПроводка\n  GROUP BY\n    [Вид],[Дата],[Юр.лицо],\n    [Дебет],\n    [Дб тип субконто 1],[Дб субконто 1],\n    [Дб тип субконто 2],[Дб субконто 2],\n    [Дб тип субконто 3],[Дб субконто 3],\n    [Дб тип субконто 4],[Дб субконто 4],\n    [Дб тип субконто 5],[Дб субконто 5],\n    [Кредит],\n    [Кр тип субконто 1],[Кр субконто 1],\n    [Кр тип субконто 2],[Кр субконто 2],\n    [Кр тип субконто 3],[Кр субконто 3],\n    [Кр тип субконто 4],[Кр субконто 4],\n    [Кр тип субконто 5],[Кр субконто 5],\n    [Валюта],[Курс руб.],[Курс у.е.],[Входит в сумму],[Примечание], [Зарплата],Докспец,[Не формировать проводку]\n   HAVING       \n     SUM([Дб количество])<>0 OR\n     SUM([Дб количество 2])<>0 OR\n     SUM([Кр количество])<>0 OR\n     SUM([Кр количество 2])<>0 OR\n     SUM(ROUND([Сумма],2))<>0 OR\n     SUM(ROUND([Сумма руб.],2))<>0 OR\n     SUM(ROUND([Сумма у.е.],2))<>0\n\n    SELECT\n      @ErrorCount = @ErrorCount +\n      CASE\n        WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) WHERE Ключ = #ГенПроводка.Вид) = 1) AND (Дебет = '') AND (Кредит <> '') THEN 1\n        WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) WHERE Ключ = #ГенПроводка.Вид) = 1) AND (Дебет <> '') AND (Кредит = '') THEN 1\n        WHEN ((SELECT TOP 1 [Контроль баланса] FROM [Вид проводки] WITH(NOLOCK) WHERE Ключ = #ГенПроводка.Вид) = 1) \n              AND ((SELECT TOP 1 [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер = Дебет) <> (SELECT TOP 1 [Контур учета] FROM Счет WITH(NOLOCK) WHERE Номер = Кредит)) THEN 1\n        ELSE 0\n      END\n      FROM #ГенПроводка\n\n  TRUNCATE TABLE #ГенПроводка\n\n  DELETE Проводка WITH(ROWLOCK) WHERE Документ = @DocID and Вид < 0 \n  UPDATE [Документ] WITH(ROWLOCK) SET [Ошибки генерации]=@ErrorCount,[Дата генерации]=GetDate() WHERE [Ключ]=@DocID\n  EXECUTE [Заполнение суммы документа] @DocID,2\nCOMMIT\n",
    "sqlWhere": "234=456",
    "sqlSelect": "'222'+[Организация.Сотрудник].[Фамилия] AS [Дир-Фамилия],",
    "sqlJoin": "JOIN xxx on 1123=897\n",
    "note": "222"
}